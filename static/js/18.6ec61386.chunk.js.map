{"version":3,"file":"static/js/18.6ec61386.chunk.js","mappings":"mMACA,GAAgB,QAAU,sBAAsB,MAAQ,oBAAoB,QAAU,sBAAsB,SAAW,uBAAuB,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,mB,SCUpS,EATc,SAAH,GAA6B,IAAvBA,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACtB,OACE,iBAAKC,UAAWC,EAAAA,MAAa,WAC3B,eAAID,UAAWC,EAAAA,QAAe,SAAEH,IAC/BC,IAGP,ECOA,EAdoB,SAAH,GAAwB,IAAlBG,EAAU,EAAVA,WACrB,OACE,iBAAKF,UAAWC,EAAAA,SAAgB,WAC9B,mBAAQD,UAAWC,EAAAA,IAAYE,QAAS,kBAAMD,EAAW,KAAK,EAAC,yBAI/D,mBAAQF,UAAWC,EAAAA,IAAYE,QAAS,kBAAMD,EAAW,SAAS,EAAC,sBAKzE,ECqBA,EAjCoB,SAAH,GAA+D,IAAzDE,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAcC,EAAgB,EAAhBA,iBACtD,OACE,iCACE,iBAAKR,UAAWC,EAAAA,OAAc,WAC5B,eAAID,UAAWC,EAAAA,KAAY,8BAC3B,gBAAID,UAAWC,EAAAA,KAAY,WACzB,gBAAID,UAAWC,EAAAA,KAAY,oBACnB,iBAAMD,UAAWC,EAAAA,KAAY,SAAEI,QAEvC,gBAAIL,UAAWC,EAAAA,KAAY,6BACV,kBAAMD,UAAWC,EAAAA,KAAY,UAAEM,EAAY,iBAIhE,iBAAKP,UAAWC,EAAAA,OAAc,WAC5B,eAAID,UAAWC,EAAAA,KAAY,0BAC3B,gBAAID,UAAWC,EAAAA,KAAY,WACzB,gBAAID,UAAWC,EAAAA,KAAY,oBACnB,iBAAMD,UAAWC,EAAAA,KAAY,SAAEK,QAEvC,gBAAIN,UAAWC,EAAAA,KAAY,6BAEzB,kBAAMD,UAAWC,EAAAA,KAAY,UAAEO,EAAgB,iBAIrD,iBAAKR,UAAWC,EAAAA,YAAmB,0BACrB,kBAAMD,UAAWC,EAAAA,KAAY,cAAGG,UAIpD,EC4EA,EAvGa,WACX,OAA0BK,EAAAA,EAAAA,UAAS,CACjCJ,GAAI,EACJC,OAAQ,IACR,eAHKI,EAAK,KAAEC,EAAQ,KAYdN,EAAeK,EAAfL,GAAIC,EAAWI,EAAXJ,OACNF,EAAQC,EAAKC,EAEbM,EAAkB,SAACC,GACvB,IAAKT,EACH,OAAO,EAET,IAAMU,EAAQJ,EAAMG,GAEpB,OAAOE,QADSD,EAAQV,EAAS,KACZY,QAAQ,GAC/B,EAEMT,EAAeK,EAAgB,MAC/BJ,EAAmBI,EAAgB,UAGzC,OACE,iBAAKZ,UAAWC,EAAAA,QAAe,WAC7B,SAAC,EAAK,CAACH,MAAM,aAAY,UACvB,SAAC,EAAW,CAACI,WA1BA,SAACW,GAClBF,GAAS,SAACM,GACR,IAAMH,EAAQG,EAAUJ,GACxB,OAAO,kBAAKI,GAAS,cAAGJ,EAAeC,EAAQ,GACjD,GACF,OAuBI,SAAC,EAAK,CAAChB,MAAM,WAAU,UACrB,SAAC,EAAW,CACVM,MAAOA,EACPC,GAAIA,EACJC,OAAQA,EACRC,aAAcA,EACdC,iBAAkBA,QAK5B,EClDA,EAAwB,wBCYxB,EATiB,WACf,OACE,iBAAKR,UAAU,YAAW,WACxB,eAAIA,UAAWC,EAAa,2BAC5B,SAAC,EAAI,MAGX,C","sources":["webpack://react-app/./src/modules/Vote/Vote.module.scss?5f15","modules/Vote/Block.jsx","modules/Vote/VoteActions.jsx","modules/Vote/VoteResults.jsx","modules/Vote/Vote.jsx","webpack://react-app/./src/pages/VotePage/VotePage.module.scss?b475","pages/VotePage/VotePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Vote_wrapper__NT0xk\",\"block\":\"Vote_block__I18dL\",\"heading\":\"Vote_heading__7A3GB\",\"btnBlock\":\"Vote_btnBlock__70Brq\",\"resultBlock\":\"Vote_resultBlock__CHjpd\",\"list\":\"Vote_list__TRsb6\",\"name\":\"Vote_name__hBV7l\",\"item\":\"Vote_item__WwlrU\",\"span\":\"Vote_span__LmRlj\",\"btn\":\"Vote_btn__tdUdV\"};","import styles from \"./Vote.module.scss\";\n\nconst Block = ({ title, children }) => {\n  return (\n    <div className={styles.block}>\n      <h2 className={styles.heading}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Block;\n","import styles from \"./Vote.module.scss\";\n\nconst VoteActions = ({ handleVote }) => {\n  return (\n    <div className={styles.btnBlock}>\n      <button className={styles.btn} onClick={() => handleVote(\"JS\")}>\n        JavaScript\n      </button>\n\n      <button className={styles.btn} onClick={() => handleVote(\"Phyton\")}>\n        Phyton\n      </button>\n    </div>\n  );\n};\n\nexport default VoteActions;\n","import styles from \"./Vote.module.scss\";\n\nconst VoteResults = ({ total, JS, Phyton, jsPercentage, phytonPercentage }) => {\n  return (\n    <>\n      <div className={styles.result}>\n        <h2 className={styles.name}>For JavaScript:</h2>\n        <ul className={styles.list}>\n          <li className={styles.item}>\n            All : <span className={styles.span}>{JS}</span>\n          </li>\n          <li className={styles.item}>\n            In percentage :<span className={styles.span}>{jsPercentage}%</span>\n          </li>\n        </ul>\n      </div>\n      <div className={styles.result}>\n        <h2 className={styles.name}>For Phyton:</h2>\n        <ul className={styles.list}>\n          <li className={styles.item}>\n            All : <span className={styles.span}>{Phyton}</span>\n          </li>\n          <li className={styles.item}>\n            In percentage :\n            <span className={styles.span}>{phytonPercentage}%</span>\n          </li>\n        </ul>\n      </div>\n      <div className={styles.resultBlock}>\n        All votes : <span className={styles.span}> {total}</span>\n      </div>\n    </>\n  );\n};\n\nexport default VoteResults;\n","import { useState } from \"react\";\nimport Block from \"./Block\";\nimport styles from \"./Vote.module.scss\";\nimport VoteActions from \"./VoteActions\";\nimport VoteResults from \"./VoteResults\";\n\nconst Vote = () => {\n  const [state, setState] = useState({\n    JS: 0,\n    Phyton: 0,\n  });\n\n  const handleVote = (propertyName) => {\n    setState((prevState) => {\n      const value = prevState[propertyName];\n      return { ...prevState, [propertyName]: value + 1 };\n    });\n  };\n\n  const { JS, Phyton } = state;\n  const total = JS + Phyton;\n\n  const countPercentage = (propertyName) => {\n    if (!total) {\n      return 0;\n    }\n    const value = state[propertyName];\n    const result = (value / total) * 100;\n    return Number(result.toFixed(2));\n  };\n\n  const jsPercentage = countPercentage(\"JS\");\n  const phytonPercentage = countPercentage(\"Phyton\");\n  // const { handleVote } = this;\n\n  return (\n    <div className={styles.wrapper}>\n      <Block title=\"Votes for:\">\n        <VoteActions handleVote={handleVote} />\n      </Block>\n      <Block title=\"Results:\">\n        <VoteResults\n          total={total}\n          JS={JS}\n          Phyton={Phyton}\n          jsPercentage={jsPercentage}\n          phytonPercentage={phytonPercentage}\n        />\n      </Block>\n    </div>\n  );\n};\n\n// class Vote extends Component {\n//   state = {\n//     JS: 0,\n//     Phyton: 0,\n//   };\n\n//   countTotal() {\n//     const { JS, Phyton } = this.state;\n//     return JS + Phyton;\n//   }\n\n//   countPercentage(propertyName) {\n//     const total = this.countTotal();\n//     if (!total) {\n//       return 0;\n//     }\n//     const value = this.state[propertyName];\n//     const result = (value / total) * 100;\n//     return Number(result.toFixed(2));\n//   }\n\n//   handleVote = (propertyName) => {\n//     this.setState((prevState) => {\n//       const value = prevState[propertyName];\n//       return {\n//         [propertyName]: value + 1,\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { JS, Phyton } = this.state;\n//     const total = this.countTotal();\n//     const jsPercentage = this.countPercentage(\"JS\");\n//     const phytonPercentage = this.countPercentage(\"Phyton\");\n//     // const { handleVote } = this;\n\n//     return (\n//       <div className={styles.wrapper}>\n//         <Block title=\"Votes for:\">\n//           <VoteActions handleVote={this.handleVote} />\n//         </Block>\n//         <Block title=\"Results:\">\n//           <VoteResults\n//             total={total}\n//             JS={JS}\n//             Phyton={Phyton}\n//             jsPercentage={jsPercentage}\n//             phytonPercentage={phytonPercentage}\n//           />\n//         </Block>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Vote;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"VotePage_title__mRLeP\"};","import Vote from \"modules/Vote/Vote\";\nimport React from \"react\";\nimport styles from \"./VotePage.module.scss\";\n\nconst VotePage = () => {\n  return (\n    <div className=\"container\">\n      <h2 className={styles.title}>Vote Results</h2>\n      <Vote />\n    </div>\n  );\n};\n\nexport default VotePage;\n"],"names":["title","children","className","styles","handleVote","onClick","total","JS","Phyton","jsPercentage","phytonPercentage","useState","state","setState","countPercentage","propertyName","value","Number","toFixed","prevState"],"sourceRoot":""}